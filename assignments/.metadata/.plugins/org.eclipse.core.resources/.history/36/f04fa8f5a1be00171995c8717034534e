package com.revature.BankingSystem.BankingUI;

import java.util.ArrayList;
import java.util.Scanner;

import com.revature.BankingSystem.BankClasses.*;

public class AccountManager {

	private static Scanner userInput;
	private static RegularUser currUser;
	

	public static boolean AccounManagment(RegularUser currAcc) {
		userInput = new Scanner(System.in);
		currUser = currAcc;
		boolean accManageFlag = true;

		do {
			System.out.print("1 - Deposit into account" + "\n2 - Withdraw from account" + "\n3 - Create new account"
					+ "\n4 - Teriminate exsiting account" + "\n5 - Transfer Funds" + "\n0 - Exit account managemrent\n");
			int userMenu = userInput.nextInt();

			switch (userMenu) {
			case 0:
				accManageFlag = false;
				break;
			case 1:
				deposit();
				break;
			case 2:
				withdraw();
				break;
			case 3:
				break;
			case 4:
				break;
			case 5:
				break;
			default:
				break;
			}

		} while (accManageFlag);

		userInput.close();
		return true;
	}

	private static void deposit() {
		Account acc = chooseAccount();
		System.out.println("Amount to deposit: ");
		double amount = userInput.nextDouble();
		acc.setBalence(acc.getBalence()+amount);
		System.out.println("New Balence: " + acc.getBalence());
	}

	private static void withdraw() {
		Account acc = chooseAccount();
		System.out.println("Amount to withdraw: ");
		double amount = userInput.nextDouble();
		if(acc.getBalence() - amount > 0) {
			acc.setBalence(acc.getBalence() - amount);
			System.out.println("New Balence: " + acc.getBalence());
		}else {
			System.out.println("Cannot have negative balance");
		}
		
	}

	private void create() {
		System.out.println("acc num: ");
		int id = userInput.nextInt()
		System.out.println("Type of Account: ");
		String type = userInput.nextLine();
		System.out.println("Initial balence: ");
		double b = userInput.nextDouble();
		currUser.addAccount(new Account(0, type, b, currUser));
	}

	private void destroy() {

	}
	private void transfer() {

	}
	private static Account chooseAccount() {
		ArrayList<Account> userAcc = currUser.getAccounts();
		
		System.out.println("Choose account to manage: ");
		for(int i = 0; i < userAcc.size(); i++) {
			System.out.println("" + i + " - " +userAcc.get(i));
		}
		
		int userMenu = userInput.nextInt();
		
		return userAcc.get(userMenu);
	}
	
}
